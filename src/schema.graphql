# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
}

"Node Interface"
interface Node {
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

type Directory implements Node {
  absolutePath: String
  accessTime(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  atime(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  atimeMs: Float
  base: String
  birthTime(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  birthtime(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  birthtimeMs: Float
  blksize: Int
  blocks: Int
  changeTime(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  children: [Node!]!
  ctime(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  ctimeMs: Float
  dev: Int
  dir: String
  ext: String
  extension: String
  gid: Int
  id: ID!
  ino: Int
  internal: Internal!
  mode: Int
  modifiedTime(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  mtime(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  mtimeMs: Float
  name: String
  nlink: Int
  parent: Node
  prettySize: String
  rdev: Int
  relativeDirectory: String
  relativePath: String
  root: String
  size: Int
  sourceInstanceName: String
  uid: Int
}

type DirectoryConnection {
  distinct(field: DirectoryFieldsEnum!): [String!]!
  edges: [DirectoryEdge!]!
  group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

type DirectoryGroupConnection {
  edges: [DirectoryEdge!]!
  field: String!
  fieldValue: String
  nodes: [Directory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type File implements Node {
  absolutePath: String
  accessTime(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  atime(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  atimeMs: Float
  base: String
  birthTime(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  birthtime(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  birthtimeMs: Float
  blksize: Int
  blocks: Int
  changeTime(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  childImageSharp: ImageSharp
  children: [Node!]!
  ctime(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  ctimeMs: Float
  dev: Int
  dir: String
  ext: String
  extension: String
  gid: Int
  id: ID!
  ino: Int
  internal: Internal!
  mode: Int
  modifiedTime(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  mtime(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  mtimeMs: Float
  name: String
  nlink: Int
  parent: Node
  prettySize: String
  "Copy file to static directory and return public url to it"
  publicURL: String
  rdev: Int
  relativeDirectory: String
  relativePath: String
  root: String
  size: Int
  sourceInstanceName: String
  uid: Int
}

type FileConnection {
  distinct(field: FileFieldsEnum!): [String!]!
  edges: [FileEdge!]!
  group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

type FileGroupConnection {
  edges: [FileEdge!]!
  field: String!
  fieldValue: String
  nodes: [File!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharp implements Node {
  children: [Node!]!
  fixed(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, quality: Int, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, toFormatBase64: ImageFormat = NO_CHANGE, traceSVG: Potrace, trim: Float = 0.0, width: Int): ImageSharpFixed
  fluid(
    background: String = "rgba(0,0,0,1)",
    base64Width: Int,
    cropFocus: ImageCropFocus = ATTENTION,
    duotone: DuotoneGradient,
    fit: ImageFit = COVER,
    grayscale: Boolean = false,
    jpegProgressive: Boolean = true,
    maxHeight: Int,
    maxWidth: Int,
    pngCompressionSpeed: Int = 4,
    quality: Int,
    rotate: Int = 0,
    sizes: String = "",
    #A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]
    srcSetBreakpoints: [Int] = [],
    toFormat: ImageFormat = NO_CHANGE,
    toFormatBase64: ImageFormat = NO_CHANGE,
    traceSVG: Potrace,
    trim: Float = 0.0
  ): ImageSharpFluid
  id: ID!
  internal: Internal!
  original: ImageSharpOriginal
  parent: Node
  resize(background: String = "rgba(0,0,0,1)", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, quality: Int, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, traceSVG: Potrace, trim: Float = 0.0, width: Int): ImageSharpResize
  resolutions(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, quality: Int, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, toFormatBase64: ImageFormat = NO_CHANGE, traceSVG: Potrace, trim: Float = 0.0, width: Int): ImageSharpResolutions @deprecated(reason : "Resolutions was deprecated in Gatsby v2. It's been renamed to \"fixed\" https:\/\/example.com\/write-docs-and-fix-this-example-link")
  sizes(
    background: String = "rgba(0,0,0,1)",
    base64Width: Int,
    cropFocus: ImageCropFocus = ATTENTION,
    duotone: DuotoneGradient,
    fit: ImageFit = COVER,
    grayscale: Boolean = false,
    jpegProgressive: Boolean = true,
    maxHeight: Int,
    maxWidth: Int,
    pngCompressionSpeed: Int = 4,
    quality: Int,
    rotate: Int = 0,
    sizes: String = "",
    #A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]
    srcSetBreakpoints: [Int] = [],
    toFormat: ImageFormat = NO_CHANGE,
    toFormatBase64: ImageFormat = NO_CHANGE,
    traceSVG: Potrace,
    trim: Float = 0.0
  ): ImageSharpSizes @deprecated(reason : "Sizes was deprecated in Gatsby v2. It's been renamed to \"fluid\" https:\/\/example.com\/write-docs-and-fix-this-example-link")
}

type ImageSharpConnection {
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  edges: [ImageSharpEdge!]!
  group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

type ImageSharpFixed {
  aspectRatio: Float
  base64: String
  height: Float
  originalName: String
  src: String
  srcSet: String
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
  width: Float
}

type ImageSharpFluid {
  aspectRatio: Float
  base64: String
  originalImg: String
  originalName: String
  presentationHeight: Int
  presentationWidth: Int
  sizes: String
  src: String
  srcSet: String
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
}

type ImageSharpGroupConnection {
  edges: [ImageSharpEdge!]!
  field: String!
  fieldValue: String
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharpOriginal {
  height: Float
  src: String
  width: Float
}

type ImageSharpResize {
  aspectRatio: Float
  height: Int
  originalName: String
  src: String
  tracedSVG: String
  width: Int
}

type ImageSharpResolutions {
  aspectRatio: Float
  base64: String
  height: Float
  originalName: String
  src: String
  srcSet: String
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
  width: Float
}

type ImageSharpSizes {
  aspectRatio: Float
  base64: String
  originalImg: String
  originalName: String
  presentationHeight: Int
  presentationWidth: Int
  sizes: String
  src: String
  srcSet: String
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

type PageInfo {
  currentPage: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
}

type Query {
  allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection
  allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection
  allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection
  allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection
  allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection
  allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection
  allStrapiArticle(filter: StrapiArticleFilterInput, limit: Int, skip: Int, sort: StrapiArticleSortInput): StrapiArticleConnection
  allStrapiTag(filter: StrapiTagFilterInput, limit: Int, skip: Int, sort: StrapiTagSortInput): StrapiTagConnection
  allStrapiUser(filter: StrapiUserFilterInput, limit: Int, skip: Int, sort: StrapiUserSortInput): StrapiUserConnection
  directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: IntQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
  file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: IntQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): File
  imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput, resolutions: ImageSharpResolutionsFilterInput, sizes: ImageSharpSizesFilterInput): ImageSharp
  site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, port: IntQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput): Site
  sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, componentPath: StringQueryOperatorInput, context: SitePageContextFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput): SitePage
  sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin
  strapiArticle(author: StrapiArticleAuthorFilterInput, children: NodeFilterListInput, content: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, id: StringQueryOperatorInput, image: FileFilterInput, internal: InternalFilterInput, keywords: StringQueryOperatorInput, parent: NodeFilterInput, slug: StringQueryOperatorInput, strapiId: StringQueryOperatorInput, summary: StringQueryOperatorInput, tags: StrapiArticleTagsFilterListInput, title: StringQueryOperatorInput, updatedAt: DateQueryOperatorInput): StrapiArticle
  strapiTag(articles: StrapiTagArticlesFilterListInput, children: NodeFilterListInput, createdAt: DateQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, parent: NodeFilterInput, strapiId: StringQueryOperatorInput, updatedAt: DateQueryOperatorInput): StrapiTag
  strapiUser(articles: StrapiUserArticlesFilterListInput, blocked: BooleanQueryOperatorInput, children: NodeFilterListInput, confirmed: BooleanQueryOperatorInput, displayName: StringQueryOperatorInput, email: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, photo: FileFilterInput, provider: StringQueryOperatorInput, role: StrapiUserRoleFilterInput, strapiId: StringQueryOperatorInput, username: StringQueryOperatorInput): StrapiUser
}

type Site implements Node {
  buildTime(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  children: [Node!]!
  host: String
  id: ID!
  internal: Internal!
  parent: Node
  pathPrefix: String
  polyfill: Boolean
  port: Int
  siteMetadata: SiteSiteMetadata
}

type SiteConnection {
  distinct(field: SiteFieldsEnum!): [String!]!
  edges: [SiteEdge!]!
  group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

type SiteGroupConnection {
  edges: [SiteEdge!]!
  field: String!
  fieldValue: String
  nodes: [Site!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePage implements Node {
  children: [Node!]!
  component: String
  componentChunkName: String
  componentPath: String
  context: SitePageContext
  id: ID!
  internal: Internal!
  internalComponentName: String
  isCreatedByStatefulCreatePages: Boolean
  parent: Node
  path: String
  pluginCreator: SitePlugin
  pluginCreatorId: String
}

type SitePageConnection {
  distinct(field: SitePageFieldsEnum!): [String!]!
  edges: [SitePageEdge!]!
  group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePageContext {
  slug: String
  user: String
  username: String
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

type SitePageGroupConnection {
  edges: [SitePageEdge!]!
  field: String!
  fieldValue: String
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePlugin implements Node {
  browserAPIs: [String]
  children: [Node!]!
  id: ID!
  internal: Internal!
  name: String
  nodeAPIs: [String]
  packageJson: SitePluginPackageJson
  parent: Node
  pluginFilepath: String
  pluginOptions: SitePluginPluginOptions
  resolve: String
  ssrAPIs: [String]
  version: String
}

type SitePluginConnection {
  distinct(field: SitePluginFieldsEnum!): [String!]!
  edges: [SitePluginEdge!]!
  group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

type SitePluginGroupConnection {
  edges: [SitePluginEdge!]!
  field: String!
  fieldValue: String
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePluginPackageJson {
  dependencies: [SitePluginPackageJsonDependencies]
  description: String
  devDependencies: [SitePluginPackageJsonDevDependencies]
  keywords: [String]
  license: String
  main: String
  name: String
  peerDependencies: [SitePluginPackageJsonPeerDependencies]
  version: String
}

type SitePluginPackageJsonDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonDevDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonPeerDependencies {
  name: String
  version: String
}

type SitePluginPluginOptions {
  apiURL: String
  contentTypes: [String]
  display: String
  google: SitePluginPluginOptionsGoogle
  icon: String
  name: String
  path: String
  pathCheck: Boolean
  queryLimit: Int
  short_name: String
  start_url: String
  trackingId: String
}

type SitePluginPluginOptionsGoogle {
  families: [String]
}

type SiteSiteMetadata {
  author: String
  description: String
  title: String
}

type StrapiArticle implements Node {
  author: StrapiArticleAuthor
  children: [Node!]!
  content: String
  createdAt(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  id: ID!
  image: File
  internal: Internal!
  keywords: String
  parent: Node
  slug: String
  strapiId: String
  summary: String
  tags: [StrapiArticleTags]
  title: String
  updatedAt(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
}

type StrapiArticleAuthor {
  blocked: Boolean
  confirmed: Boolean
  displayName: String
  email: String
  id: String
  photo: StrapiArticleAuthorPhoto
  provider: String
  role: String
  username: String
}

type StrapiArticleAuthorPhoto {
  createdAt(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  ext: String
  hash: String
  id: String
  mime: String
  name: String
  provider: String
  public_id: String
  related: [String]
  sha256: String
  size: String
  updatedAt(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  url: String
}

type StrapiArticleConnection {
  distinct(field: StrapiArticleFieldsEnum!): [String!]!
  edges: [StrapiArticleEdge!]!
  group(field: StrapiArticleFieldsEnum!, limit: Int, skip: Int): [StrapiArticleGroupConnection!]!
  nodes: [StrapiArticle!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type StrapiArticleEdge {
  next: StrapiArticle
  node: StrapiArticle!
  previous: StrapiArticle
}

type StrapiArticleGroupConnection {
  edges: [StrapiArticleEdge!]!
  field: String!
  fieldValue: String
  nodes: [StrapiArticle!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type StrapiArticleTags {
  articles: [String]
  createdAt(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  id: String
  name: String
  updatedAt(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
}

type StrapiTag implements Node {
  articles: [StrapiTagArticles]
  children: [Node!]!
  createdAt(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  id: ID!
  internal: Internal!
  name: String
  parent: Node
  strapiId: String
  updatedAt(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
}

type StrapiTagArticles {
  author: String
  content: String
  createdAt(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  id: String
  image: File
  keywords: String
  slug: String
  summary: String
  title: String
  updatedAt(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
}

type StrapiTagConnection {
  distinct(field: StrapiTagFieldsEnum!): [String!]!
  edges: [StrapiTagEdge!]!
  group(field: StrapiTagFieldsEnum!, limit: Int, skip: Int): [StrapiTagGroupConnection!]!
  nodes: [StrapiTag!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type StrapiTagEdge {
  next: StrapiTag
  node: StrapiTag!
  previous: StrapiTag
}

type StrapiTagGroupConnection {
  edges: [StrapiTagEdge!]!
  field: String!
  fieldValue: String
  nodes: [StrapiTag!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type StrapiUser implements Node {
  articles: [StrapiUserArticles]
  blocked: Boolean
  children: [Node!]!
  confirmed: Boolean
  displayName: String
  email: String
  id: ID!
  internal: Internal!
  parent: Node
  photo: File
  provider: String
  role: StrapiUserRole
  strapiId: String
  username: String
}

type StrapiUserArticles {
  author: String
  content: String
  createdAt(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  id: String
  image: File
  keywords: String
  slug: String
  summary: String
  title: String
  updatedAt(
    #Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".
    difference: String,
    #Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String,
    #Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean,
    #Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
}

type StrapiUserConnection {
  distinct(field: StrapiUserFieldsEnum!): [String!]!
  edges: [StrapiUserEdge!]!
  group(field: StrapiUserFieldsEnum!, limit: Int, skip: Int): [StrapiUserGroupConnection!]!
  nodes: [StrapiUser!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type StrapiUserEdge {
  next: StrapiUser
  node: StrapiUser!
  previous: StrapiUser
}

type StrapiUserGroupConnection {
  edges: [StrapiUserEdge!]!
  field: String!
  fieldValue: String
  nodes: [StrapiUser!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type StrapiUserRole {
  description: String
  id: String
  name: String
  type: String
}

enum DirectoryFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  blksize
  blocks
  changeTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

enum FileFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  blksize
  blocks
  changeTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  publicURL
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

enum ImageCropFocus {
  ATTENTION
  CENTER
  EAST
  ENTROPY
  NORTH
  NORTHEAST
  NORTHWEST
  SOUTH
  SOUTHEAST
  SOUTHWEST
  WEST
}

enum ImageFit {
  CONTAIN
  COVER
  FILL
}

enum ImageFormat {
  JPG
  NO_CHANGE
  PNG
  WEBP
}

enum ImageSharpFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  fixed___aspectRatio
  fixed___base64
  fixed___height
  fixed___originalName
  fixed___src
  fixed___srcSet
  fixed___srcSetWebp
  fixed___srcWebp
  fixed___tracedSVG
  fixed___width
  fluid___aspectRatio
  fluid___base64
  fluid___originalImg
  fluid___originalName
  fluid___presentationHeight
  fluid___presentationWidth
  fluid___sizes
  fluid___src
  fluid___srcSet
  fluid___srcSetWebp
  fluid___srcWebp
  fluid___tracedSVG
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  original___height
  original___src
  original___width
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  resize___aspectRatio
  resize___height
  resize___originalName
  resize___src
  resize___tracedSVG
  resize___width
  resolutions___aspectRatio
  resolutions___base64
  resolutions___height
  resolutions___originalName
  resolutions___src
  resolutions___srcSet
  resolutions___srcSetWebp
  resolutions___srcWebp
  resolutions___tracedSVG
  resolutions___width
  sizes___aspectRatio
  sizes___base64
  sizes___originalImg
  sizes___originalName
  sizes___presentationHeight
  sizes___presentationWidth
  sizes___sizes
  sizes___src
  sizes___srcSet
  sizes___srcSetWebp
  sizes___srcWebp
  sizes___tracedSVG
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_LEFT
  TURNPOLICY_MAJORITY
  TURNPOLICY_MINORITY
  TURNPOLICY_RIGHT
  TURNPOLICY_WHITE
}

enum SiteFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  host
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pathPrefix
  polyfill
  port
  siteMetadata___author
  siteMetadata___description
  siteMetadata___title
}

enum SitePageFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  component
  componentChunkName
  componentPath
  context___slug
  context___user
  context___username
  id
  internalComponentName
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  isCreatedByStatefulCreatePages
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  path
  pluginCreatorId
  pluginCreator___browserAPIs
  pluginCreator___children
  pluginCreator___children___children
  pluginCreator___children___children___children
  pluginCreator___children___children___id
  pluginCreator___children___id
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___children___parent___children
  pluginCreator___children___parent___id
  pluginCreator___id
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  pluginCreator___name
  pluginCreator___nodeAPIs
  pluginCreator___packageJson___dependencies
  pluginCreator___packageJson___dependencies___name
  pluginCreator___packageJson___dependencies___version
  pluginCreator___packageJson___description
  pluginCreator___packageJson___devDependencies
  pluginCreator___packageJson___devDependencies___name
  pluginCreator___packageJson___devDependencies___version
  pluginCreator___packageJson___keywords
  pluginCreator___packageJson___license
  pluginCreator___packageJson___main
  pluginCreator___packageJson___name
  pluginCreator___packageJson___peerDependencies
  pluginCreator___packageJson___peerDependencies___name
  pluginCreator___packageJson___peerDependencies___version
  pluginCreator___packageJson___version
  pluginCreator___parent___children
  pluginCreator___parent___children___children
  pluginCreator___parent___children___id
  pluginCreator___parent___id
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___parent___parent___children
  pluginCreator___parent___parent___id
  pluginCreator___pluginFilepath
  pluginCreator___pluginOptions___apiURL
  pluginCreator___pluginOptions___contentTypes
  pluginCreator___pluginOptions___display
  pluginCreator___pluginOptions___google___families
  pluginCreator___pluginOptions___icon
  pluginCreator___pluginOptions___name
  pluginCreator___pluginOptions___path
  pluginCreator___pluginOptions___pathCheck
  pluginCreator___pluginOptions___queryLimit
  pluginCreator___pluginOptions___short_name
  pluginCreator___pluginOptions___start_url
  pluginCreator___pluginOptions___trackingId
  pluginCreator___resolve
  pluginCreator___ssrAPIs
  pluginCreator___version
}

enum SitePluginFieldsEnum {
  browserAPIs
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  nodeAPIs
  packageJson___dependencies
  packageJson___dependencies___name
  packageJson___dependencies___version
  packageJson___description
  packageJson___devDependencies
  packageJson___devDependencies___name
  packageJson___devDependencies___version
  packageJson___keywords
  packageJson___license
  packageJson___main
  packageJson___name
  packageJson___peerDependencies
  packageJson___peerDependencies___name
  packageJson___peerDependencies___version
  packageJson___version
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pluginFilepath
  pluginOptions___apiURL
  pluginOptions___contentTypes
  pluginOptions___display
  pluginOptions___google___families
  pluginOptions___icon
  pluginOptions___name
  pluginOptions___path
  pluginOptions___pathCheck
  pluginOptions___queryLimit
  pluginOptions___short_name
  pluginOptions___start_url
  pluginOptions___trackingId
  resolve
  ssrAPIs
  version
}

enum SortOrderEnum {
  ASC
  DESC
}

enum StrapiArticleFieldsEnum {
  author___blocked
  author___confirmed
  author___displayName
  author___email
  author___id
  author___photo___createdAt
  author___photo___ext
  author___photo___hash
  author___photo___id
  author___photo___mime
  author___photo___name
  author___photo___provider
  author___photo___public_id
  author___photo___related
  author___photo___sha256
  author___photo___size
  author___photo___updatedAt
  author___photo___url
  author___provider
  author___role
  author___username
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  content
  createdAt
  id
  image___absolutePath
  image___accessTime
  image___atime
  image___atimeMs
  image___base
  image___birthTime
  image___birthtime
  image___birthtimeMs
  image___blksize
  image___blocks
  image___changeTime
  image___children
  image___children___children
  image___children___children___children
  image___children___children___id
  image___children___id
  image___children___internal___content
  image___children___internal___contentDigest
  image___children___internal___description
  image___children___internal___fieldOwners
  image___children___internal___ignoreType
  image___children___internal___mediaType
  image___children___internal___owner
  image___children___internal___type
  image___children___parent___children
  image___children___parent___id
  image___ctime
  image___ctimeMs
  image___dev
  image___dir
  image___ext
  image___extension
  image___gid
  image___id
  image___ino
  image___internal___content
  image___internal___contentDigest
  image___internal___description
  image___internal___fieldOwners
  image___internal___ignoreType
  image___internal___mediaType
  image___internal___owner
  image___internal___type
  image___mode
  image___modifiedTime
  image___mtime
  image___mtimeMs
  image___name
  image___nlink
  image___parent___children
  image___parent___children___children
  image___parent___children___id
  image___parent___id
  image___parent___internal___content
  image___parent___internal___contentDigest
  image___parent___internal___description
  image___parent___internal___fieldOwners
  image___parent___internal___ignoreType
  image___parent___internal___mediaType
  image___parent___internal___owner
  image___parent___internal___type
  image___parent___parent___children
  image___parent___parent___id
  image___prettySize
  image___publicURL
  image___rdev
  image___relativeDirectory
  image___relativePath
  image___root
  image___size
  image___sourceInstanceName
  image___uid
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  keywords
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  slug
  strapiId
  summary
  tags
  tags___articles
  tags___createdAt
  tags___id
  tags___name
  tags___updatedAt
  title
  updatedAt
}

enum StrapiTagFieldsEnum {
  articles
  articles___author
  articles___content
  articles___createdAt
  articles___id
  articles___image___absolutePath
  articles___image___accessTime
  articles___image___atime
  articles___image___atimeMs
  articles___image___base
  articles___image___birthTime
  articles___image___birthtime
  articles___image___birthtimeMs
  articles___image___blksize
  articles___image___blocks
  articles___image___changeTime
  articles___image___children
  articles___image___children___children
  articles___image___children___id
  articles___image___ctime
  articles___image___ctimeMs
  articles___image___dev
  articles___image___dir
  articles___image___ext
  articles___image___extension
  articles___image___gid
  articles___image___id
  articles___image___ino
  articles___image___internal___content
  articles___image___internal___contentDigest
  articles___image___internal___description
  articles___image___internal___fieldOwners
  articles___image___internal___ignoreType
  articles___image___internal___mediaType
  articles___image___internal___owner
  articles___image___internal___type
  articles___image___mode
  articles___image___modifiedTime
  articles___image___mtime
  articles___image___mtimeMs
  articles___image___name
  articles___image___nlink
  articles___image___parent___children
  articles___image___parent___id
  articles___image___prettySize
  articles___image___publicURL
  articles___image___rdev
  articles___image___relativeDirectory
  articles___image___relativePath
  articles___image___root
  articles___image___size
  articles___image___sourceInstanceName
  articles___image___uid
  articles___keywords
  articles___slug
  articles___summary
  articles___title
  articles___updatedAt
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  createdAt
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  strapiId
  updatedAt
}

enum StrapiUserFieldsEnum {
  articles
  articles___author
  articles___content
  articles___createdAt
  articles___id
  articles___image___absolutePath
  articles___image___accessTime
  articles___image___atime
  articles___image___atimeMs
  articles___image___base
  articles___image___birthTime
  articles___image___birthtime
  articles___image___birthtimeMs
  articles___image___blksize
  articles___image___blocks
  articles___image___changeTime
  articles___image___children
  articles___image___children___children
  articles___image___children___id
  articles___image___ctime
  articles___image___ctimeMs
  articles___image___dev
  articles___image___dir
  articles___image___ext
  articles___image___extension
  articles___image___gid
  articles___image___id
  articles___image___ino
  articles___image___internal___content
  articles___image___internal___contentDigest
  articles___image___internal___description
  articles___image___internal___fieldOwners
  articles___image___internal___ignoreType
  articles___image___internal___mediaType
  articles___image___internal___owner
  articles___image___internal___type
  articles___image___mode
  articles___image___modifiedTime
  articles___image___mtime
  articles___image___mtimeMs
  articles___image___name
  articles___image___nlink
  articles___image___parent___children
  articles___image___parent___id
  articles___image___prettySize
  articles___image___publicURL
  articles___image___rdev
  articles___image___relativeDirectory
  articles___image___relativePath
  articles___image___root
  articles___image___size
  articles___image___sourceInstanceName
  articles___image___uid
  articles___keywords
  articles___slug
  articles___summary
  articles___title
  articles___updatedAt
  blocked
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  confirmed
  displayName
  email
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  photo___absolutePath
  photo___accessTime
  photo___atime
  photo___atimeMs
  photo___base
  photo___birthTime
  photo___birthtime
  photo___birthtimeMs
  photo___blksize
  photo___blocks
  photo___changeTime
  photo___children
  photo___children___children
  photo___children___children___children
  photo___children___children___id
  photo___children___id
  photo___children___internal___content
  photo___children___internal___contentDigest
  photo___children___internal___description
  photo___children___internal___fieldOwners
  photo___children___internal___ignoreType
  photo___children___internal___mediaType
  photo___children___internal___owner
  photo___children___internal___type
  photo___children___parent___children
  photo___children___parent___id
  photo___ctime
  photo___ctimeMs
  photo___dev
  photo___dir
  photo___ext
  photo___extension
  photo___gid
  photo___id
  photo___ino
  photo___internal___content
  photo___internal___contentDigest
  photo___internal___description
  photo___internal___fieldOwners
  photo___internal___ignoreType
  photo___internal___mediaType
  photo___internal___owner
  photo___internal___type
  photo___mode
  photo___modifiedTime
  photo___mtime
  photo___mtimeMs
  photo___name
  photo___nlink
  photo___parent___children
  photo___parent___children___children
  photo___parent___children___id
  photo___parent___id
  photo___parent___internal___content
  photo___parent___internal___contentDigest
  photo___parent___internal___description
  photo___parent___internal___fieldOwners
  photo___parent___internal___ignoreType
  photo___parent___internal___mediaType
  photo___parent___internal___owner
  photo___parent___internal___type
  photo___parent___parent___children
  photo___parent___parent___id
  photo___prettySize
  photo___publicURL
  photo___rdev
  photo___relativeDirectory
  photo___relativePath
  photo___root
  photo___size
  photo___sourceInstanceName
  photo___uid
  provider
  role___description
  role___id
  role___name
  role___type
  strapiId
  username
}

input BooleanQueryOperatorInput {
  eq: Boolean
  in: [Boolean]
  ne: Boolean
  nin: [Boolean]
}

input DateQueryOperatorInput {
  eq: Date
  gt: Date
  gte: Date
  in: [Date]
  lt: Date
  lte: Date
  ne: Date
  nin: [Date]
}

input DirectoryFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  changeTime: DateQueryOperatorInput
  children: NodeFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: IntQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
  highlight: String
  opacity: Int
  shadow: String
}

input FileFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  changeTime: DateQueryOperatorInput
  children: NodeFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: IntQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  publicURL: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
  eq: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input ImageSharpFilterInput {
  children: NodeFilterListInput
  fixed: ImageSharpFixedFilterInput
  fluid: ImageSharpFluidFilterInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  original: ImageSharpOriginalFilterInput
  parent: NodeFilterInput
  resize: ImageSharpResizeFilterInput
  resolutions: ImageSharpResolutionsFilterInput
  sizes: ImageSharpSizesFilterInput
}

input ImageSharpFixedFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  height: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  sizes: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
  aspectRatio: FloatQueryOperatorInput
  height: IntQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

input ImageSharpResolutionsFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  height: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpSizesFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  sizes: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
  eq: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  ne: Int
  nin: [Int]
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input NodeFilterInput {
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

input Potrace {
  alphaMax: Float
  background: String
  blackOnWhite: Boolean
  color: String
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  turdSize: Float
  turnPolicy: PotraceTurnPolicy
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  host: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  pathPrefix: StringQueryOperatorInput
  polyfill: BooleanQueryOperatorInput
  port: IntQueryOperatorInput
  siteMetadata: SiteSiteMetadataFilterInput
}

input SitePageContextFilterInput {
  slug: StringQueryOperatorInput
  user: StringQueryOperatorInput
  username: StringQueryOperatorInput
}

input SitePageFilterInput {
  children: NodeFilterListInput
  component: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  componentPath: StringQueryOperatorInput
  context: SitePageContextFilterInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  internalComponentName: StringQueryOperatorInput
  isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
  parent: NodeFilterInput
  path: StringQueryOperatorInput
  pluginCreator: SitePluginFilterInput
  pluginCreatorId: StringQueryOperatorInput
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
  browserAPIs: StringQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  nodeAPIs: StringQueryOperatorInput
  packageJson: SitePluginPackageJsonFilterInput
  parent: NodeFilterInput
  pluginFilepath: StringQueryOperatorInput
  pluginOptions: SitePluginPluginOptionsFilterInput
  resolve: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

input SitePluginPackageJsonDevDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonFilterInput {
  dependencies: SitePluginPackageJsonDependenciesFilterListInput
  description: StringQueryOperatorInput
  devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
  keywords: StringQueryOperatorInput
  license: StringQueryOperatorInput
  main: StringQueryOperatorInput
  name: StringQueryOperatorInput
  peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

input SitePluginPluginOptionsFilterInput {
  apiURL: StringQueryOperatorInput
  contentTypes: StringQueryOperatorInput
  display: StringQueryOperatorInput
  google: SitePluginPluginOptionsGoogleFilterInput
  icon: StringQueryOperatorInput
  name: StringQueryOperatorInput
  path: StringQueryOperatorInput
  pathCheck: BooleanQueryOperatorInput
  queryLimit: IntQueryOperatorInput
  short_name: StringQueryOperatorInput
  start_url: StringQueryOperatorInput
  trackingId: StringQueryOperatorInput
}

input SitePluginPluginOptionsGoogleFilterInput {
  families: StringQueryOperatorInput
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
  author: StringQueryOperatorInput
  description: StringQueryOperatorInput
  title: StringQueryOperatorInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input StrapiArticleAuthorFilterInput {
  blocked: BooleanQueryOperatorInput
  confirmed: BooleanQueryOperatorInput
  displayName: StringQueryOperatorInput
  email: StringQueryOperatorInput
  id: StringQueryOperatorInput
  photo: StrapiArticleAuthorPhotoFilterInput
  provider: StringQueryOperatorInput
  role: StringQueryOperatorInput
  username: StringQueryOperatorInput
}

input StrapiArticleAuthorPhotoFilterInput {
  createdAt: DateQueryOperatorInput
  ext: StringQueryOperatorInput
  hash: StringQueryOperatorInput
  id: StringQueryOperatorInput
  mime: StringQueryOperatorInput
  name: StringQueryOperatorInput
  provider: StringQueryOperatorInput
  public_id: StringQueryOperatorInput
  related: StringQueryOperatorInput
  sha256: StringQueryOperatorInput
  size: StringQueryOperatorInput
  updatedAt: DateQueryOperatorInput
  url: StringQueryOperatorInput
}

input StrapiArticleFilterInput {
  author: StrapiArticleAuthorFilterInput
  children: NodeFilterListInput
  content: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  id: StringQueryOperatorInput
  image: FileFilterInput
  internal: InternalFilterInput
  keywords: StringQueryOperatorInput
  parent: NodeFilterInput
  slug: StringQueryOperatorInput
  strapiId: StringQueryOperatorInput
  summary: StringQueryOperatorInput
  tags: StrapiArticleTagsFilterListInput
  title: StringQueryOperatorInput
  updatedAt: DateQueryOperatorInput
}

input StrapiArticleSortInput {
  fields: [StrapiArticleFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input StrapiArticleTagsFilterInput {
  articles: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  id: StringQueryOperatorInput
  name: StringQueryOperatorInput
  updatedAt: DateQueryOperatorInput
}

input StrapiArticleTagsFilterListInput {
  elemMatch: StrapiArticleTagsFilterInput
}

input StrapiTagArticlesFilterInput {
  author: StringQueryOperatorInput
  content: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  id: StringQueryOperatorInput
  image: FileFilterInput
  keywords: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  summary: StringQueryOperatorInput
  title: StringQueryOperatorInput
  updatedAt: DateQueryOperatorInput
}

input StrapiTagArticlesFilterListInput {
  elemMatch: StrapiTagArticlesFilterInput
}

input StrapiTagFilterInput {
  articles: StrapiTagArticlesFilterListInput
  children: NodeFilterListInput
  createdAt: DateQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  parent: NodeFilterInput
  strapiId: StringQueryOperatorInput
  updatedAt: DateQueryOperatorInput
}

input StrapiTagSortInput {
  fields: [StrapiTagFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input StrapiUserArticlesFilterInput {
  author: StringQueryOperatorInput
  content: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  id: StringQueryOperatorInput
  image: FileFilterInput
  keywords: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  summary: StringQueryOperatorInput
  title: StringQueryOperatorInput
  updatedAt: DateQueryOperatorInput
}

input StrapiUserArticlesFilterListInput {
  elemMatch: StrapiUserArticlesFilterInput
}

input StrapiUserFilterInput {
  articles: StrapiUserArticlesFilterListInput
  blocked: BooleanQueryOperatorInput
  children: NodeFilterListInput
  confirmed: BooleanQueryOperatorInput
  displayName: StringQueryOperatorInput
  email: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  photo: FileFilterInput
  provider: StringQueryOperatorInput
  role: StrapiUserRoleFilterInput
  strapiId: StringQueryOperatorInput
  username: StringQueryOperatorInput
}

input StrapiUserRoleFilterInput {
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  name: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input StrapiUserSortInput {
  fields: [StrapiUserFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
  eq: String
  glob: String
  in: [String]
  ne: String
  nin: [String]
  regex: String
}


"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON